Checks: >
    -*,
    google-readability-casting,
    google-build-namespaces,
    readability-identifier-naming,
    readability-else-after-return,
    readability-qualified-auto,
    readability-non-const-parameter,
    readability-simplify-boolean-expr,
    readability-redundant-string-init,
    readability-static-accessed-through-instance,
    readability-string-compare,
    readability-uniqueptr-delete-release,
    modernize-avoid-bind,
    modernize-avoid-c-arrays,
    modernize-concat-nested-namespaces,
    modernize-deprecated-headers,
    modernize-deprecated-ios-base-aliases,
    modernize-loop-convert,
    modernize-make-shared,
    modernize-make-unique,
    modernize-pass-by-value,
    modernize-raw-string-literal,
    modernize-redundant-void-arg,
    modernize-replace-auto-ptr,
    modernize-replace-random-shuffle,
    modernize-return-braced-init-list,
    modernize-shrink-to-fit,
    modernize-unary-static-assert,
    modernize-use-auto,
    modernize-use-bool-literals,
    modernize-use-default-member-init,
    modernize-use-emplace,
    modernize-use-equals-default,
    modernize-use-equals-delete,
    modernize-use-nullptr,
    modernize-use-override,
    modernize-use-trailing-return-type,
    modernize-use-transparent-functors,
    modernize-use-uncaught-exceptions,
    modernize-use-using,
    performance-faster-string-find,
    performance-for-range-copy,
    performance-implicit-conversion-in-loop,
    performance-inefficient-algorithm,
    performance-inefficient-string-concatenation,
    performance-inefficient-vector-operation,
    performance-move-const-arg,
    performance-move-constructor-init,
    performance-no-automatic-move,
    performance-noexcept-move-constructor,
    performance-trivially-destructible,
    performance-type-promotion-in-math-fn,
    performance-unnecessary-copy-initialization,
    performance-unnecessary-value-param,

CheckOptions:
    - { key: readability-identifier-naming.NamespaceCase,       value: CamelCase  }
    - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
    - { key: readability-identifier-naming.ClassMemberCase,     value: CamelCase  }
    - { key: readability-identifier-naming.PrivateMemberPrefix, value: m          }
    - { key: readability-identifier-naming.PrivateMemberCase,   value: CamelCase  }
    - { key: readability-identifier-naming.PublicMemberPrefix,  value: ''         }
    - { key: readability-identifier-naming.PublicMemberCase,    value: camelBack  }
    - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
    - { key: readability-identifier-naming.StructMemberCase,    value: CamelCase  }
    - { key: readability-identifier-naming.FunctionCase,        value: CamelCase  }
    - { key: readability-identifier-naming.VariableCase,        value: camelBack  }
    - { key: readability-identifier-naming.GlobalConstantCase,  value: camelBack }
    - { key: hicpp-signed-bitwise.IgnorePositiveIntegerLiterals, value: true}
#    - { key: readability-braces-around-statements.ShortStatementLines, value: 0 }
